#version 330 core

// Pass in things as vec4, because vec3 are intepreted size of vec4 (16 bytes),
// hence, to prevent offset confusion, just pass in as vec4
layout(std140)uniform Material{
	vec4 kColour;
	
	vec4 kAmbient;
	vec4 kDiffuse;
	vec4 kSpecular;
	float kShininess;
}material;

in vec2 UV;
// Output data
out vec4 frag_color;

uniform bool u_textureEnabled;
uniform sampler2D u_tex;

uniform float u_tilingFactor;

void main()
{
    if (u_textureEnabled)
        frag_color = texture(u_tex, UV * u_tilingFactor);
    else
        frag_color = material.kColour;
}
		