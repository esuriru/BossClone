#version 330 core
layout (location = 0) in vec3 vertexPosition;
layout (location = 1) in vec4 vertexColor;
layout (location = 2) in vec3 vertexNormal;

out vec3 normal;
out vec3 position;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
    normal = mat3(transpose(inverse(model))) * vertexNormal;
    position = vec3(model * vec4(vertexPosition, 1.0));
    // position_viewspace = vec3(view * model * vec4(vertexPosition, 1.0));
    gl_Position = projection * view * vec4(position, 1.0);
}  