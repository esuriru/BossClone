#version 330 core
out vec4 frag_color;

in vec3 normal;
in vec3 position;

uniform vec3 cameraPos;
uniform samplerCube skybox;

const float ratio = 1.00 / 1.52;

void main()
{             
    // For refraction

    // vec3 I = normalize(position - cameraPos);
    // vec3 I = normalize(position - cameraPos);
    // vec3 R = refract(I, normalize(normal), ratio);
    // frag_color = vec4(texture(skybox, R).rgb, 1.0);

    // Reflection

    // Probably can just make it viewspace so it would work without camera position.
    vec3 I = normalize(position - cameraPos);
    vec3 R = reflect(I, normalize(normal));
    frag_color = vec4(texture(skybox, R).rgb, 1.0);
}