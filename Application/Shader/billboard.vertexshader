#version 330 core

layout (location = 0) in vec3 vertexPosition;
layout (location = 1) in vec4 vertexColour;
layout (location = 2) in vec3 vertexNormal;
layout (location = 3) in vec2 vertexUV;

out vec3 texCoords;
out vec2 UV;

uniform mat4 view;
uniform mat4 projection;


uniform vec3 position;
uniform vec2 scale;

void main()
{
    vec3 camera_right = vec3(view[0][0], view[1][0], view[2][0]);
    vec3 camera_up = vec3(view[0][1], view[1][1], view[2][1]);

    vec3 vertexPosition = position + camera_right * vertexPosition.x * scale.x + camera_up * vertexPosition.y * scale.y; 
    UV = vertexUV;
    gl_Position = projection * view * vec4(vertexPosition, 1.0f);
}
